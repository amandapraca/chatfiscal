import os
import pandas as pd
from dotenv import load_dotenv
import google.generativeai as genai

# üîê Carrega a chave da API do arquivo .env
load_dotenv()
genai.configure(api_key=os.getenv("GEMINI_API_KEY"))

# üìä Fun√ß√£o para gerar resumo dos dados
def gerar_resumo_dos_dados(df: pd.DataFrame) -> str:
    colunas_numericas = df.select_dtypes(include="number")

    resumo = f"""
Colunas e tipos:
{df.dtypes.to_string()}

Estat√≠sticas descritivas:
{colunas_numericas.describe().to_string()}

Correla√ß√£o entre vari√°veis:
{colunas_numericas.corr().to_string()}
"""
    return resumo

# ü§ñ Fun√ß√£o principal que chama a LLM via Gemini
def gerar_resposta_llm(pergunta: str, df: pd.DataFrame) -> str:
    try:
        model = genai.GenerativeModel("gemini-pro-latest")
        resumo_dados = gerar_resumo_dos_dados(df)

        # üéØ Estilo de resposta
        if "(resposta curta)" in pergunta.lower():
            estilo_instrucao = "- Responda de forma direta, objetiva e concisa. Use frases curtas e v√° direto ao ponto."
        else:
            estilo_instrucao = "- Seja t√©cnico, claro e forne√ßa uma resposta equilibrada: nem muito longa, nem muito curta."

        # üß† Prompt enviado √† LLM
        prompt = f"""
Voc√™ √© um agente fiscal inteligente chamado ChatFiscal, especializado em documentos tribut√°rios brasileiros.

Seu papel √© analisar os dados fiscais enviados pelo usu√°rio e responder perguntas com base nesses dados.

Regras de comportamento:
1. Use apenas os dados fornecidos pelo usu√°rio no momento da pergunta
2. Responda em portugu√™s brasileiro, com linguagem clara e objetiva
3. Formate valores monet√°rios como R$ 1.234,56
4. Use emojis relevantes para tornar a resposta mais amig√°vel
5. Se n√£o encontrar dados suficientes, diga: "N√£o encontrei informa√ß√µes suficientes"
6. Nunca mencione que √© uma IA ou que est√° usando arquivos
7. Mantenha a resposta curta e direta, com dados espec√≠ficos
8. Se a pergunta for irrelevante, responda educadamente que n√£o √© poss√≠vel ajudar
9. Sempre que poss√≠vel, destaque insights fiscais √∫teis (ex: maiores fornecedores, produtos mais vendidos, estados com mais emiss√£o)

Estilo de resposta:
{estilo_instrucao}

Resumo dos dados:
{resumo_dados}

Pergunta:
{pergunta}
"""

        response = model.generate_content(prompt)
        return response.text

    except Exception as e:
        return f"‚ùå Erro ao gerar resposta: {e}"
